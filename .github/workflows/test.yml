name: Create/Delete Branch for Pull Request
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  NEON_PROJECT_ID: ${{ vars.NEON_PROJECT_ID }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch and Run Migrations
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ env.NEON_API_KEY }}

      - name: Debug outputs
        run: |
          echo "Branch created with outputs:"
          echo "db_url: ${{ steps.create_neon_branch.outputs.db_url }}"
          echo "db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"
          echo "host: ${{ steps.create_neon_branch.outputs.host }}"
          echo "database: ${{ steps.create_neon_branch.outputs.database }}"

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy --schema=prisma/schema.prisma
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url }}

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ env.NEON_API_KEY }}
